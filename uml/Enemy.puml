@startuml Enemy

abstract class Enemy {
  # sf::Texture texture
  # sf::Sprite sprite
  # Mouvement mouvement
  # bool alive
  # bool movingRight
  # float leftLimit
  # float rightLimit
  # float speed
  # bool isFalling
  # float fallSpeed
  # const float GRAVITY
  # std::vector<sf::Sprite> currentBlocks
  # std::vector<sf::Sprite> currentPipes
  # std::vector<Enemy*> currentEnemies

  + Enemy(texturePath: string, x: float, y: float, leftLim: float, rightLim: float)
  + {abstract} virtual update(): void
  + render(window: sf::RenderWindow&): void
  + isAlive(): bool
  + getBounds(): sf::FloatRect
  + virtual interactWithPlayer(player: Player&): void
  + checkForGaps(gaps: vector<sf::FloatRect>&): void
  + fall(): void
  + setCurrentLevel(blocks: vector<sf::Sprite>&, pipes: vector<sf::Sprite>&, enemies: vector<Enemy*>&): void
  + {abstract} virtual onJumpedOn(): void
  + virtual onFireballHit(): void
  # virtual handleCollisions(oldPosition: sf::Vector2f&): void
  + virtual reverseDirection(): void
}

class Goomba {
  + Goomba(x: float, y: float)
  + update(): void override
  + interactWithPlayer(player: Player&): void override
  + onJumpedOn(): void override
  + onFireballHit(): void override
  + reverseDirection(): void
  - handleCollisionsGoomba(oldPosition: sf::Vector2f&): void
}

class KoopaTroopa {
  - sf::Texture koopaShell
  - bool inShellState = false

  + KoopaTroopa(x: float, y: float)
  + update(): void override
  + interactWithPlayer(player: Player&): void override
  + onJumpedOn(): void override
  + onFireballHit(): void override
  + reverseDirection(): void
  # handleCollisions(oldPosition: sf::Vector2f&): void override
}

class FriendlyMushroom {
  + FriendlyMushroom(x: float, y: float)
  + update(): void override
  + interactWithPlayer(player: Player&): void override
  + onJumpedOn(): void override
  + reverseDirection(): void
}

' Inheritance relationships showing polymorphism
Enemy <|-- Goomba : Hérite de <
Enemy <|-- KoopaTroopa : Hérite de <
Enemy <|-- FriendlyMushroom : Hérite de <

' Component relationships
Enemy *-- Mouvement : uses >

note top of Enemy
  <b>Classe de base abstraite</b>
  Définit le comportement commun
  pour tous les types d'ennemis 
  avec des méthodes virtuelles 
end note

note top of Goomba
  Ennemi qui se déplace horizontalement
  et meurt lorsqu'on lui saute dessus
  Il peut tuer ou diminuer la taille 
  du joueur s'il le touche
end note

note top of KoopaTroopa
  Ennemi complexe avec des changements d'état :
  - État de marche -> Il peut tuer le joueur
  - État de carapace (après avoir été sauté dessus) -> Pas d'effet sur le joueur
end note

note top of FriendlyMushroom
  Ennemi bénéfique qui fait grandir
  le joueur petit lorsqu'il est ramassé
end note

note bottom of Enemy
  <b>Polymorphisme :</b>
  - Tous les types d'ennemis implémentent leur propre version de update()
  - Le comportement de onJumpedOn() varie en fonction du type d'ennemi
  - interactWithPlayer() diffère pour chaque type d'ennemi
end note

@enduml
